@namespace Conventor2
@using Microsoft.AspNetCore.Html

@if (Convention == null) {
    return;
}

<table>
    @foreach (var childConvention in ChildConventions()) {
		<tr ondblclick="details = this.getElementsByTagName('details')[0]; if (details.hasAttribute('open')) details.removeAttribute('open'); else details.setAttribute('open', ''); event.preventDefault(); event.stopImmediatePropagation();">
			<td>
                @RenderRawHTML(childConvention.HumanReadableBid)
			</td>

            <td>
                <div>
                    @RenderRawHTML(childConvention.HumanReadableDescription)
                </div>
                
                @if (childConvention.Children.Count > 0) {
                    <details open="@((BiddingSequence.Count + 1) % 3 != 0)">
                        <summary>Expand</summary>
                        <ConventionTable SectionName=@SectionName BiddingSequence=@childConvention.BiddingSequence />
                    </details>
                }
			</td>
		</tr>
    }
</table>

@code {

    [Parameter]
    public List<BidType> BiddingSequence { get; set; } = [];

    [Parameter]
    public String SectionName { get; set; } = "";

    public Convention? Convention {
        get {
            return ConventorConfig.GetConvention(SectionName, BiddingSequence);
        }
    }

    public RenderFragment RenderRawHTML(HtmlString? rawHTML) {
        return builder => {
            builder.AddMarkupContent(0, rawHTML?.Value ?? "");
        };
    }

    public IEnumerable<Convention> ChildConventions() {
        return (Convention?.Children.Values ?? Enumerable.Empty<Convention>()).OrderBy(c => c.Bid);
    }
}